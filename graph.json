{
  "nodes":[
		{"name":"101", "group":1, "year":"fr", "mdepth":"1", "ddepth":1,
            "title":"Introduction to Computer Science",
            "desc":"This course introduces students to some of the big ideas in computer science. It will excite students about the application of computer science to various disciplines, and show the social impact possible through the use of technology in developing regions, politics, medicine, and other fields."},
		{"name":"110", "group":1, "year":"fr", "mdepth":"2", "ddepth":2,
            "title":"Introduction to Computer Programming I",
            "desc":"An introduction to programming with an emphasis on solving problems drawn from a variety of domains. Topics include basic control and data structures, problem solving strategies, and software development tools and techniques."},
		{"name":"120", "group":2, "year":"fr", "mdepth":"3", "ddepth":3,
            "title":"Introduction to Computer Programming II",
            "desc":"Provides a continuing introduction to programming with an emphasis on problem­solving. It considers problems drawn from a variety of domains (including Computer Science) and emphasizes both the broader applicability of the relevant data structures and programming concepts, as well as the implementation of those structures and concepts in software. Topics include arrays, lists, stacks, queues, trees, searching and sorting, and exceptions."},
		{"name":"210", "group":3, "year":"so", "mdepth":"4", "ddepth":4,
            "title":"Software Development",
            "desc":"An introduction to the development of large­ scale software. Topics include modularization, design patterns, documentation, unit testing, source code control, build systems, debuggers, and performance tuning; all of the tools necessary for developing software as opposed to writing small programs."},
		{"name":"245", "group":3, "year":"so", "mdepth":"4", "ddepth":4,
            "title":"Introduction to Discrete Structures",
            "desc":"An introduction to mathematical concepts for Computer Science. Topics include first-order logic and logical arguments, proof techniques with an emphasis on mathematical induction, sets, relations and functions, properties of integers, counting methods, probability, and recurrences. Weekly laboratory."},
		{"name":"345", "group":4, "year":"jr", "mdepth":"5", "ddepth":5,
            "title":"Analysis of Discrete Structures",
            "desc":"Introduction to and analysis of algorithms and characteristics of discrete structures. Course topics include algorithm analysis techniques, recurrence relations, structural induction, hierarchical structures, graphs, hashing, and sorting."},
		{"name":"445", "group":4, "year":"sr", "mdepth":"6", "ddepth":7,
            "title":"Algorithms",
            "desc":"Introduction to the design and analysis of algorithms: basic analysis techniques (asymptotics, sums, recurrences); basic design techniques (divide and conquer, dynamic programming, greedy, amortization); acquiring an algorithm repertoire (sorting, median finding, strong components, spanning trees, shortest paths, maximum flow, string matching); and handling intractability (approximation algorithms, branch and bound)."},
		{"name":"352", "group":4, "year":"jr", "mdepth":"5", "ddepth":5,
            "title":"Systems Programming and Unix",
            "desc":"Programming in C, including single and multi-dimensional arrays, lists, stacks, queues, trees, and bit manipulation. Unix topics, including debuggers, makefiles, shell programming, and other topics that support systems programming."},
		{"name":"252", "group":4, "year":"so", "mdepth":"6", "ddepth":6,
            "title":"Computer Organization",
            "desc":"Basic machine organization; elementary hardware concepts; CPU internals. Machine operations and instructions; assembly language concepts and programming."},
		{"name":"452", "group":4, "year":"sr", "mdepth":"7", "ddepth":7,
            "title":"Principles of Operating Systems",
            "desc":"Concepts of modern operating systems; concurrent processes; process synchronization and communication; resource allocation; kernels; deadlock; memory management; file systems."},
		{"name":"473", "group":4, "year":"sr", "mdepth":"6", "ddepth":7,
            "title":"Automata, Grammars, and Languages",
            "desc":"Introduction to models of computation (finite automata, pushdown automata, Turing machines), representations of languages (regular expressions, context-free grammars), and the basic hierarchy of languages (regular, context-free, decidable, and undecidable languages)."},
		{"name":"453", "group":4, "year":"sr", "mdepth":"7", "ddepth":7,
            "title":"Compilers and Systems Software",
            "desc":"Basic concepts of compilation and related systems software. Topics include lexical analysis, parsing, semantic analysis, code generation; assemblers, loaders, linkers; debuggers."},
		{"name":"335", "group":4, "year":"jr", "mdepth":"5", "ddepth":5,
            "title":"Object-Oriented Programming and Design",
            "desc":"Fundamentals of object-oriented software development. Includes design principles, inheritance, polymorphism, Unified Modeling Language (UML), testing, event-driven programming with graphical user interfaces, applications of design patterns, and use of existing frameworks. Weekly laboratory."},
		{"name":"460", "group":4, "year":"sr", "mdepth":"6", "ddepth":7,
            "title":"Database Design",
            "desc":"Functions of a database system. Data modeling and logical database design. Query languages and query optimization. Efficient data storage and access. Database access through standalone and web applications."},
		{"name":"444", "group":4, "year":"sr", "mdepth":"6", "ddepth":7,
            "title":"Data Visualization",
            "desc":"This course will present the fundamentals of data visualization, the art and science of using a computer to generate visual depictions of data. The course will present the foundations of graphic design, perceptual psychology and cognitive science, as well as the algorithmic basis for many for the visualization techniques. While statistical techniques may determine correlations among the data, visualization helps us frame what questions to ask. The course is targeted at students looking for effective ways of understanding data from their own fields, as well as students interested in learning the fundamentals that will enable them to build and improve the state of the art. The successful student will learn to design, critique and improve data visualizations."},
		{"name":"337", "group":4, "year":"jr", "mdepth":"3", "ddepth":3,
            "title":"Web Programming",
            "desc":"Introduction to the techniques and technologies for developing dynamic web sites. Topics include a web server, PHP as the server-side scripting language, the MySQL database, JavaScript and AJAX for enriching web services, and page layout with HTML and CSS. Security concerns will be considered with details for prevention of such vulnerabilities in web applications. This course includes a team project to deploy a dynamic website. Weekly laboratory."},
		{"name":"372", "group":4, "year":"jr", "mdepth":"4", "ddepth":4,
            "title":"Comparative Programming Languages",
            "desc":"Introduction to several major high-level programming languages and their characteristics. Programming projects are required in at least three languages."},
		{"name":"346", "group":4, "year":"jr", "mdepth":"4", "ddepth":4,
            "title":"Cloud Computing",
            "desc":"This course focuses on cloud programming, with an emphasis on using the cloud to solve Big Data problems. The course will not only look at how distributed systems, databases, networks, etc. are used to implement cloud computing platforms and cloud applications, but also the impact of the infinite scalability and pay-as-you-go on the platforms and applications."},
		{"name":"422", "group":4, "year":"sr", "mdepth":"6", "ddepth":7,
            "title":"Introduction to Parallel and Distributed Programming",
            "desc":"Concepts and applications of parallel and distributed programs. Process interaction using shared variables and message passing; parallel computing; development of correct programs; general problem solving techniques; scientific computing; distributed systems. Programming assignments on multiple processor machines."}
	],
	"links":[
    {"source":0, "target":1},
    {"source":1, "target":2},
    {"source":2, "target":3},
    {"source":2, "target":4},
    {"source":3, "target":5},
    {"source":4, "target":5},
    {"source":5, "target":6},
    {"source":5, "target":10},
    {"source":3, "target":7},
    {"source":7, "target":8},
    {"source":8, "target":9},
    {"source":5, "target":9},
    {"source":5, "target":11},
    {"source":8, "target":11},
    {"source":3, "target":12},
    {"source":12, "target":13},
    {"source":5, "target":13},
    {"source":12, "target":14},
    {"source":5, "target":14},
    {"source":1, "target":15},
    {"source":2, "target":16},
    {"source":2, "target":17},
    {"source":8, "target":18},
    {"source":5, "target":18}
	]

}
